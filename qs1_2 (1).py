# -*- coding: utf-8 -*-
"""Qs1-2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1R3GruKlpFIB6l3lDlPvY2Wc4H_Y9Sw9h
"""

import re

def validate_phone_number(phone_number):
    # RE to match valid phone number
    pattern = r'^(\+?\d{1,2}-?)?\d{3}-?\d{3}-?\d{4}$'

    if re.match(pattern, phone_number):
        return True
    else:
        return False

#Testing
phone_numbers = [
    "2124567890",
    "212-456-7890",
    "(212)456-7890",
    "(212)-456-7890",
    "212.456.7890",
    "212 456 7890",
    "+12124567890",
    "+1 212.456.7890",
    "+212-456-7890",
    "1-212-456-7890"
]

for number in phone_numbers:
    if validate_phone_number(number):
        print(f"{number} is a valid phone number.")
    else:
        print(f"{number} is an invalid phone number.")

pip install requests beautifulsoup4

import requests
from bs4 import BeautifulSoup
import re

def get_website_details(url):
    try:
        response = requests.get(url)
        if response.status_code == 200:
            soup = BeautifulSoup(response.text, 'html.parser')

            # Extract social links
            social_links = []
            social_link_patterns = [r'(https?://(?:www\.)?facebook\.com/\S+)', r'(https?://(?:www\.)?linkedin\.com/\S+)']
            for pattern in social_link_patterns:
                matches = re.findall(pattern, response.text)
                social_links.extend(matches)

            # Extract email addresses
            email_pattern = r'\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,7}\b'
            emails = re.findall(email_pattern, response.text, re.IGNORECASE)

            # Extract contact numbers
            contact_pattern = r'(\+\d{1,3}[\s-]?\d{1,5}[\s-]?\d{3,4}[\s-]?\d{3,4})'
            contacts = re.findall(contact_pattern, response.text)

            return {
                'social_links': social_links,
                'emails': emails,
                'contacts': contacts
            }
        else:
            print("Failed to fetch website content.")
    except requests.exceptions.RequestException as e:
        print(f"An error occurred: {e}")

    return None

# Get user input
website_url = input("Enter the website URL: ")
details = get_website_details(website_url)

if details:
    print("Social links:")
    for link in details['social_links']:
        print(link)

    print("\nEmails:")
    for email in details['emails']:
        print(email)

    print("\nContacts:")
    for contact in details['contacts']:
        print(contact)

